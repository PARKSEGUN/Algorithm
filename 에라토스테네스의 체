//에라토스테네스의 체는 대량의 소수를 구하기위해 사용하는 알고리즘으로 O(N^1/2)의 시간복잡도를 갖는다.
//소수란 약수가 오로지 1과 자기 자신밖에 존재하지 않는 수이다. 즉, 1을 제외한 수의 배수가 되는 수는 소수가 아니다.
//에라토스테네스의 체는 이러한 소수의 개념을 이용한 알고리즘이다.
//임의의 수 n 까지의 소수를 구하고자 할 때 2에서부터 n의 제곱근까지 돌며 모든 배수들을 소수에서 제외시키는 방식이다.
//간단하게 이야기하면 2부터 n 까지 소수가 될수 없는  값들을 제거하는 방법이다.

#include<iostream>
#include<vector>

using namespace std;
int N;
bool arr[5555555];
vector<int>vec;

int main(void) {
	cin >> N;   //N 입력
	for (int i = 2; i * i <= N; i++) {    //밑에 for문에서 j=i*i 로 설정하기 때문에 범위는 i*i<=N 으로 설정한다.
		if (arr[i] == false) {
			for (int j = i * i; j <= N; j += i) {  
      //j값을 i*i 로 하는 이유는 그전까지 값들은 이미 확인되었기 때문이다 예를 들면 i가 3이라면 6,9,12,15 ... 이렇게 확인해야 하는데
      //6은 i가 2 일때 이미 확인했던 값이기 때문에 제외한다.
				arr[j] = true;
			}
		}
	}
	for (int i = 2; i <= N; i++) {    //남은 애들은 vector에 넣어준다. 남은 값들이 소수가 된다.
		if (arr[i] == false) { vec.push_back(i); }
	}
	for (int i = 0; i < vec.size(); i++) {
		cout << vec[i] << " ";
	}
}
